{"version":3,"sources":["firebase.js","screens/Login.js","screens/Register.js","components/CustomerListItem.js","screens/Home.js","screens/AddChats.js","screens/Chat.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","Login","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","console","log","replace","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","borderRadius","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","containerStyle","button","onPress","signInWithEmailAndPassword","catch","error","alert","title","titleStyle","color","navigate","backgroundColor","StyleSheet","create","flex","alignItems","justifyContent","padding","marginTop","Register","name","setName","image","setImageURL","useLayoutEffect","setOptions","headerBackTitle","signUp","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","onSubmitEditing","marginBottom","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessags","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","rounded","photoUrl","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","Home","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","CustomerListItem","AddChats","input","setInput","createChat","add","goBack","leftIcon","disabled","Chat","route","messages","setMessages","params","headerTitleAlign","headerTitle","Text","Entypo","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","TextInput","alignSelf","maxWidth","margin","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","initialRouteName","screenOptions","Screen","options","component"],"mappings":"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","file":"static/js/app.5b48dc44.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPGyPbdFzIZKC4LoMBDBW9vIoKxNHAaA0\",\r\n  authDomain: \"chatme-2-dec45.firebaseapp.com\",\r\n  projectId: \"chatme-2-dec45\",\r\n  storageBucket: \"chatme-2-dec45.appspot.com\",\r\n  messagingSenderId: \"513826774514\",\r\n  appId: \"1:513826774514:web:c5af3e13d1703746601f6b\"\r\n};\r\n\r\nlet app;\r\n\r\nif (firebase.apps.length === 0) {\r\n  app = firebase.initializeApp(firebaseConfig)\r\n} else {\r\n  app = firebase.app();\r\n}\r\n\r\nconst db = app.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };","import { StyleSheet, View, KeyboardAvoidingView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Image, Button, Input } from 'react-native-elements'; \r\nimport { auth } from '../firebase';\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      console.log(authUser);\r\n      if (authUser) {\r\n        navigation.replace(\"Home\");\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n    \r\n  }, []);\r\n\r\n  function signIn() {\r\n    auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .catch((error) => alert(error));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior='padding' style={styles.container}>\r\n      <StatusBar style='light' />\r\n      <Image\r\n        source={\r\n          {uri: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRr6XJONfJud7_7E214FbaOAGPv--vjYl-5tJkIkIMntfJliGfZ'}\r\n        }\r\n        style={{ width:200, height:200, borderRadius: 30 }} \r\n      />\r\n      <View style={{ height: 20 }} />\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder='Type your Email'\r\n          autoFocus\r\n          type='email'\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Input\r\n          placeholder='Type your Password'\r\n          secureTextEntry\r\n          type='password'\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n      </View>\r\n      <Button \r\n        containerStyle={styles.button} \r\n        type= \"outline\" \r\n        onPress={signIn} \r\n        title=\"SIGN IN\" \r\n        titleStyle={{color: \"white\"}}\r\n        />\r\n      <Button \r\n        onPress={ () => navigation.navigate(\"Register\") }\r\n        containerStyle={{backgroundColor: \"white\", width: 200}} \r\n        type=\"outline\" \r\n        title=\"REGISTER\" \r\n        titleStyle={{color: \"#4B0082\"}}\r\n        /> \r\n      <View style={{ height: 30 }} />\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n    backgroundColor: \"#4B0082\"\r\n  }\r\n})","import { StyleSheet, Text, View, KeyboardAvoidingView, } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { Input, Image, Button  } from 'react-native-elements'\r\nimport { useLayoutEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst Register = ({ navigation }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [image, setImageURL] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackTitle: \"Login\",\r\n    });\r\n  }, [navigation]);\r\n\r\n  const signUp = () =>{\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: name,\r\n          photoURL: image || \r\n          \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior='padding' style={styles.container}>\r\n      <StatusBar style='light'/>\r\n\r\n      <Image\r\n        source={\r\n         {uri: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRr6XJONfJud7_7E214FbaOAGPv--vjYl-5tJkIkIMntfJliGfZ'}\r\n        }\r\n        style={{ width:150, height:150, borderRadius: 30 }} \r\n      />\r\n      <View style={{ height: 20 }} />\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder='Put you full Name'\r\n          autoFocus\r\n          type='text' \r\n          value={name}\r\n          onChangeText={text => setName(text)}\r\n        />\r\n        <Input\r\n          placeholder='Put your Email'\r\n          type='email' \r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n        />\r\n        <Input\r\n          placeholder='Put your password'\r\n          secureTextEntry\r\n          type='password' \r\n          value={password}\r\n          onChangeText={text => setPassword(text)}\r\n        />\r\n        <Input\r\n          placeholder='Put your Profile photo'\r\n          type='file' \r\n          value={image}\r\n          onChangeText={text => setImageURL(text)}\r\n          onSubmitEditing={signUp}\r\n        />\r\n      </View>\r\n      <Button \r\n        containerStyle={styles.button} \r\n        type= \"outline\" \r\n        onPress={signUp} \r\n        title=\"SIGN UP\" \r\n        titleStyle={{color: \"white\"}}\r\n      />\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default Register\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: -50,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n\r\n  button: {\r\n    width: 200,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#4B0082\"\r\n  }\r\n\r\n})","import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { ListItem, Avatar } from 'react-native-elements'\r\nimport { db } from '../firebase'\r\n\r\nconst CustomListItem = ({ id, chatName, enterChat }) => {\r\n    const [chatMessages, setChatMessags] = useState([])\r\n    useEffect(() => {\r\n        const unsebscribe =\r\n        db.collection('chats').doc(id).collection('messages').orderBy('timestamp', \"desc\").onSnapshot(\r\n            (snapshot) =>\r\n                setChatMessags(snapshot.docs.map((doc) => doc.data()))\r\n        )\r\n        return unsebscribe\r\n    }, [])\r\n\r\n    return (\r\n        <ListItem\r\n            key={id}\r\n            bottomDivider\r\n            onPress={() => enterChat(id, chatName)}\r\n        >\r\n            <Avatar\r\n                rounded\r\n                source={{ \r\n                    uri: chatMessages?.[0]?.photoUrl ||  \r\n                     \"https://toppng.com/uploads/preview/roger-berry-avatar-placeholder-11562991561rbrfzlng6h.png\"\r\n                }}\r\n\r\n            />\r\n            <ListItem.Content>\r\n                <ListItem.Title style={{ fontWeight: \"800\" }}>\r\n                    {chatName}\r\n                </ListItem.Title>\r\n                <ListItem.Subtitle\r\n                    numberOfLines={1}\r\n                    ellipsizeMode=\"tail\"\r\n                >\r\n                   {!chatMessages[0] ? \"Start chatting\" :  chatMessages?.[0]?.displayName  +\" : \"+ chatMessages?.[0]?.message} \r\n                </ListItem.Subtitle>\r\n            </ListItem.Content>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})","import { StyleSheet, SafeAreaView, ScrollView, View, TouchableOpacity } from 'react-native';\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport CustomerListItem from '../components/CustomerListItem';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\nimport { AntDesign , SimpleLineIcons } from \"@expo/vector-icons\";\r\n\r\nconst Home = ({ navigation }) => {\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const signOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace(\"Login\")\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('chats').onSnapshot(snapshot =>{\r\n            setChats(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        })\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"ChatMe\",\r\n            headerStyle: { backgroundColor: \"#9932CC\" },\r\n            headerTitleStyle: { color: \"white\" },\r\n            headerTintColor: \"black\",\r\n\r\n            headerLeft: () => (\r\n                <View style={{ marginLeft: 20 }}>\r\n                    <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n                        <Avatar \r\n                            rounded\r\n                            source={{ uri: auth?.currentUser?.photoURL }}\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            \r\n            headerRight: () => (\r\n                <View \r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                        width: 80,\r\n                        marginRight: 20,\r\n                    }}\r\n                >\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <AntDesign name=\"camerao\" size={24} color=\"white\"  />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity \r\n                        onPress={() => navigation.navigate(\"AddChat\") }\r\n                        activeOpacity={0.5}\r\n                    >\r\n                        <SimpleLineIcons name=\"pencil\" size={24} color='white' />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                ),\r\n        });\r\n    }, [navigation]); \r\n\r\n    const enterChat = (id, chatName) => {\r\n        navigation.navigate(\"Chats\", {\r\n            id,\r\n            chatName,\r\n        });\r\n    };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n        <ScrollView>\r\n            {chats.map(({id, data: {chatName}}) => (\r\n                <CustomerListItem \r\n                    key={id} \r\n                    id={id} \r\n                    chatName={chatName}\r\n                    enterChat={enterChat}\r\n                />\r\n            ))}         \r\n        </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\r\nimport React, { useLayoutEffect, useState } from 'react'\r\nimport { Input, Button } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport { db } from '../firebase'\r\n\r\nconst AddChats = ({ navigation }) => {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Add a new Chat\",\r\n            headerBackTitle: \"Chats\",\r\n        });\r\n\r\n    }, [navigation]);\r\n\r\n    const createChat = async () => {\r\n        await db\r\n            .collection(\"chats\")\r\n            .add({\r\n                chatName: input,\r\n            })\r\n            .then(() => {\r\n                navigation.goBack();\r\n            })\r\n            .catch((error) => alert(error));\r\n        };\r\n    \r\n  return (\r\n    <View style={styles.container}>\r\n      <Input \r\n        placeholder='Enter a chat name'\r\n        value={input}\r\n        onChangeText={(text) => setInput(text)}\r\n        onSubmitEditing={createChat}\r\n        leftIcon={\r\n            <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\"/>\r\n        }\r\n      />\r\n      <Button \r\n        disabled={! input}\r\n        onPress={createChat}\r\n        title=\"Create a new chat\"\r\n        type= \"outline\" \r\n        titleStyle={{color: \"white\"}}\r\n        containerStyle={{backgroundColor: \"#4B0082\"}}\r\n        />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AddChats\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"white\",\r\n        padding: 30,\r\n        height: \"100%\",\r\n    },\r\n})","import { \r\n    StyleSheet, \r\n    Text, \r\n    TouchableOpacity,\r\n    SafeAreaView, \r\n    StatusBar, \r\n    View, \r\n    KeyboardAvoidingView, \r\n    Platform, \r\n    ScrollView, \r\n    TextInput, \r\n    Keyboard, \r\n    TouchableWithoutFeedback \r\n} from 'react-native';\r\nimport React, { useLayoutEffect, useState } from 'react';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth, db } from '../firebase';\r\nimport { AntDesign, Entypo, Ionicons } from \"@expo/vector-icons\";\r\nimport firebase from 'firebase/compat';\r\n\r\nconst Chat = ({ navigation, route }) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db\r\n            .collection(\"chats\")\r\n            .doc(route.params.id)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot(snapshot => \r\n                setMessages(\r\n                snapshot.docs.map(doc =>({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Discussion\",\r\n            headerStyle: { backgroundColor: \"#9932CC\" },\r\n            headerTitleStyle: { color: \"white\" },\r\n            headerTintColor: \"black\",\r\n            headerTitleAlign: \"left\",\r\n\r\n            headerTitle: () => (\r\n                <View \r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                    }} \r\n                >\r\n                    <Avatar \r\n                        rounded\r\n                        source={{ \r\n                            uri: messages[(messages).length - 1]?.data.photoURL || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"\r\n                        }}\r\n                    />\r\n                    <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>{route.params.chatName}</Text>    \r\n                </View>\r\n            ),\r\n\r\n            headerLeft: () => (\r\n                <TouchableOpacity \r\n                    style={{ marginLeft: 10 }}\r\n                    onPress={navigation.goBack}\r\n                >\r\n                    <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\r\n                </TouchableOpacity>\r\n            ),\r\n\r\n            headerRight: () => (\r\n                <View \r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                        width: 80,\r\n                        marginRight: 20,\r\n                    }}\r\n                >\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <Entypo name=\"video-camera\" size={24} color=\"white\"  />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity>\r\n                        <Ionicons name=\"call\" size={24} color='white' />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                ),\r\n        });\r\n    }, [navigation, messages]); \r\n\r\n    const sendMessage = () => {\r\n        Keyboard.dismiss();\r\n\r\n        db.collection('chats').doc(route.params.id).collection('messages').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL\r\n        })\r\n        setInput(\"\")\r\n\r\n    };\r\n    \r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\r\n      <StatusBar style='light' />  \r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\": \"height\"}\r\n        style={styles.container}\r\n        keyboardVerticalOffset={90}\r\n      >\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <>\r\n                <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\r\n                    {messages.map(({id, data}) => (\r\n                        data.email === auth.currentUser.email ? (\r\n                            <View key={id} style={styles.reciever}>\r\n                                <Avatar \r\n                                    // WEB\r\n                                    containerStyle={{\r\n                                        position:\"absolute\",\r\n                                        bottom: -15,\r\n                                        right: -5,\r\n                                    }}\r\n                                    position=\"absolute\"\r\n                                    bottom={-15}\r\n                                    right={-5}\r\n                                    rounded\r\n                                    size={30}\r\n                                    source={{\r\n                                        uri: data.photoURL,\r\n                                    }}\r\n                                />\r\n                                <Text style={styles.recieverText}>{data.message}</Text>\r\n                            </View>\r\n                        ): (\r\n                            <View key={id} style={styles.sender}>\r\n                                <Avatar \r\n                                     // WEB\r\n                                    containerStyle={{\r\n                                        position:\"absolute\",\r\n                                        bottom: -15,\r\n                                        left: -5,\r\n                                    }}\r\n                                    position=\"absolute\"\r\n                                    bottom={-15}\r\n                                    left={-5}\r\n                                    rounded\r\n                                    size={30}\r\n                                    source={{\r\n                                        uri: data.photoURL,\r\n                                    }}\r\n                                />\r\n                                <Text style={styles.senderText}>{data.message}</Text>\r\n                                <Text style={styles.senderName}>{data.displayName}</Text>\r\n                            </View>\r\n                        )\r\n                    )   )} \r\n                </ScrollView>\r\n                <View style={styles.footer}>\r\n                <   TouchableOpacity>\r\n                        <Entypo name=\"emoji-happy\" size={24} color=\"#9932CC\" />\r\n                    </TouchableOpacity>\r\n                    <TextInput\r\n                        value={input}\r\n                        onChangeText={(text) => setInput(text)}\r\n                        onSubmitEditing={sendMessage}\r\n                        placeholder=\"Type a Message\"\r\n                        style={styles.TextInput} \r\n                    />\r\n                    <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\r\n                        <Ionicons name=\"send\" size={24} color='#9932CC' />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    TextInput: {\r\n        bottom: 0,\r\n        height: 40,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        marginLeft: 15,\r\n        backgroundColor: \"#ececec\",\r\n        padding: 10,\r\n        color: \"black\",\r\n        borderRadius: 30,\r\n    },\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 15,\r\n        justifyContent: \"space-between\",\r\n    },\r\n    reciever: {\r\n        padding: 15,\r\n        backgroundColor: \"#ececec\",\r\n        alignSelf: \"flex-end\",\r\n        borderRadius: 20,\r\n        marginRight: 15,\r\n        marginBottom: 20,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\",\r\n    },\r\n    recieverText:{\r\n        color: \"black\",\r\n        fontWeight: \"500\",\r\n        marginRight: 10,\r\n    },\r\n    sender: {\r\n        padding: 15,\r\n        backgroundColor: \"#9932CC\",\r\n        alignSelf: 'flex-start',\r\n        borderRadius: 20,\r\n        margin: 15,\r\n        marginBottom: 20,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\",\r\n    },\r\n    senderText:{\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n        marginLeft: 10,\r\n    },\r\n    senderName: {\r\n        left: 10,\r\n        paddingRight: 10,\r\n        fontSize: 10,\r\n        color: \"white\",\r\n    }\r\n\r\n})","import \"react-native-gesture-handler\";\nimport { StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport Home from \"./screens/Home\";\nimport AddChats from \"./screens/AddChats\";\nimport Chat from \"./screens/Chat\";\n\nconst Stack = createStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#4B0082\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\" screenOptions={globalScreenOptions}>\n        <Stack.Screen options={{ title: \"Welcome to ChatMe\" }} name=\"Login\" component={Login} />\n        <Stack.Screen options={{ title: \"Register page\" }} name=\"Register\" component={Register} />\n        <Stack.Screen options={{ title: \"Chats\" }} name=\"Home\" component={Home} />\n        <Stack.Screen options={{ title: \"Add Chats\" }} name=\"AddChat\" component={AddChats} />\n        <Stack.Screen options={{ title: \"Discussion\" }} name=\"Chats\" component={Chat} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}